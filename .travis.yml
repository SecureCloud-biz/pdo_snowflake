language: c
matrix:
  include:
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AWS
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.0-ubuntu14.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_secret_password" -in parameters.json.enc -out
  #     parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AWS
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.1-ubuntu14.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_secret_password" -in parameters.json.enc -out
  #     parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AWS
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.1-ubuntu16.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_secret_password" -in parameters.json.enc -out
  #     parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AWS
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.2-ubuntu18.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_secret_password" -in parameters.json.enc -out
  #     parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AZURE
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.0-ubuntu14.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_duper_secret_password" -in parameters_az.json.enc
  #     -out parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AZURE
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.1-ubuntu14.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_duper_secret_password" -in parameters_az.json.enc
  #     -out parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AZURE
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.1-ubuntu16.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_duper_secret_password" -in parameters_az.json.enc
  #     -out parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  # - os: linux
  #   sudo: required
  #   services:
  #   - docker
  #   env:
  #   - SNOWFLAKE_CLOUD_ENV=AZURE
  #   - DOCKER_NAME=snowflakedb/pdo-snowflake:php7.2-ubuntu18.04
  #   before_install:
  #   - openssl aes-256-cbc -k "$super_duper_secret_password" -in parameters_az.json.enc
  #     -out parameters.json -d
  #   - docker pull $DOCKER_NAME
  #   script:
  #   - "./scripts/run_docker_test.sh"
  - os: osx
    sudo: required
    services:
    - docker
    env:
    - SNOWFLAKE_CLOUD_ENV=AWS
    before_install:
    - sw_vers
    - brew update
    - brew install php@7.1
    - brew install jq
    - brew install zlib
    - brew install zlib-devel
    - openssl aes-256-cbc -k "$super_duper_secret_password" -in parameters_az.json.enc
      -out parameters.json -d
    - python3 -m venv env
    - source env/bin/activate
    script:
    - "./scripts/build_run_osx.sh"
env:
  global:
  - secure: a8A+jnalrjC3sNzkYyDcFfAwR+Pa8wfKsSCbNV0gaFaSpOhUDCtjyMM/u8kWNr8TosA2jGtn7lFB+fsFii6O+xL6SFTxqTHeJOaEOGUnhZGReFOhvAIx2hjkShPgsCFuxbgWWfFKt38k0vkR4RqoT8qrZCkonuDVHYIoP6WTXKBK+/2D5ZPz27/ZrvugY4K3DBRNj0eNecqVLDFpR466NMj/bNTnOPlr0K4+HxJh3nvJ18eIcUIo4UCXoAqxG2AnX5EbhJHC5ojQJoBNx29FqIT7AuyfG72QL7p5VdXU7utBfND9pILRi9qCi3EMokmFM8ANCRSMaqGdnE3fnEPhTknieQakogJzo2JhrlrLQYAVdz0M24H2q8Wnj7LK429fwmql0yWMTz4xMLPZNbuDzs7F6y1sID3kottBES2D6MGl8fu1Y6mGdgmkKGiTCo462PK/X8WcMlzL7QYGsnr8zMOa6Gy4AG5DkzSMpjvkjwZlOGyjcvOvjnFtcU+GNYNlCNJ2Ij9BTUEKOUBBN6CXMwI4eZME7ufNPPWLPz4QbvrA0oWVmbAzndb5WEUhEEQmigewRAkYJUVmi/4bDpg7jWCBtqaLs5Wg19Fzgjvd/CCHpZ5CJTzDUGfm1BgelyBpkX5fe9Y9dp7zymhz3p7bkyJCQBlLryH9RPL6PflZS5U=
  - secure: l2hiDLAwoxwcC5gwDclzpxsiN1enr9G3KzW9+KL5FUZl2Sm7K3PYvTOcRCpc2CCfSpSmK2ZkUFeWagNFIQtOmqnOhnzM4mVGLD9b7GLvOfUqQAf7qJf2p7lrlhtLznTipJBdYzMzGAD/UMMQqEdtJBAztv7EX2MRN9TIJvgPIFemyFH/TRHxZtHcm8Gz58FY8Jp/P/F2rqhJV0WwOegcDWcZ2FqKOFqb0IGmALvHB5lJZzA4kUP/aNSE7SeIVqIwFFsweOSXnpvrO0b+niucahSJAtpqkAYwtRRTWR6sQLiEn0XPNVYhivauPH/80ii0fWgbEuL5b16HQkH1v3bA7G3brJIOOQktGlk2bVthhdi13RlHXV30/EL6dWXKWoKUXKi0Ayfm/q+pRzC2xGIIZ1Ncnd0GTUJfC/A8t3iD5JmWvx4ux4sD80Z3zZIRqR1M7uvVWZAUN1ve62UxDHMUK+9b8oSRWwIK6cjGvgiLgWT79WnlM9udaNDcjS6JODSgO8z24gXnGn0oYpUZ3WLERGtyS82a41HBMonaJMWlDfEuar7lFlVwdZ5PFQdKL2XzOrGsqR8wtZ8nirW0UUA9F5w5tEQj/pToDX8PAOMxXxOUMIGpwzciNPVx+RULk73mtKbHc0ZgvxVBNQGnjQs20zU5DLjn4+TodZV8X6pTaLo=
